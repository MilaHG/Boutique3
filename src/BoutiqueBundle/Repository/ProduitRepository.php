<?php
/**
 * Created by PhpStorm.
 * User: Mila
 * Date: 20/11/2018
 * Time: 10:13
 */


namespace BoutiqueBundle\Repository;

use BoutiqueBundle\Entity\Produit;

/**
 * MembreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends \Doctrine\ORM\EntityRepository
{
    /*
     * si j'ai des requêtes qui concernent exclusivement la table produit, et qui sont spécifiques... je vais les coder ici plutôt que de la faire dans le
     * controller
     * cela maintient un controller plus clair et plus générique
     */

    // Fonction pour récupérer toutes les catégories via le QueryBuilder()
    public function findAllCategorie()
    {
        // nous avons besoin du manager ici pour utiliser queryBuilder()
        $em = $this->getEntityManager();

        // Méthode 1 avec QueryBuilder (PHP)
        // On bâtit une requête vie des fonctions PHP de Doctrine
        $query = $em->createQueryBuilder();
        $query
            ->select('p.categorie')
            ->distinct(true)
            ->from(Produit::class, 'p')
            ->orderBy('p.categorie', 'ASC');

        // On exécute la requête et on fetch
        return $query->getQuery()->getResult();
    }

    // Fonction pour récupérer toutes les catégories via le createQuery()
    public function findAllCategorie2()
    {
        // nous avons besoin du manager ici pour utiliser queryBuilder()
        $em = $this->getEntityManager();

        // Méthode 2 avec CreateQuery (SQL)
        // on créé une requête en SQL via Doctrine
        $query = $em->createQuery("SELECT DISTINCT p.categorie FROM BoutiqueBundle\Entity\Produit p ORDER BY p.categorie");

        // on exécute la requête et on fetch
        return $query->getResult();

    }


}


